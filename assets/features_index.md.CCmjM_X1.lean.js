import{_ as n,D as a,c as l,j as e,a as s,I as i,a4 as o,o as p}from"./chunks/framework.z18ruK2m.js";const Y=JSON.parse('{"title":"General","description":"","frontmatter":{},"headers":[],"relativePath":"features/index.md","filePath":"features/index.md","lastUpdated":1723191285000}'),h={name:"features/index.md"},c=e("h1",{id:"general",tabindex:"-1"},[s("General "),e("a",{class:"header-anchor",href:"#general","aria-label":'Permalink to "General"'},"​")],-1),r=e("p",null,"Here are some system configurations, you can configure some system parameters here, such as the port to listen on, the address to listen on, logs, etc.",-1),d=e("h2",{id:"configuration",tabindex:"-1"},[s("Configuration "),e("a",{class:"header-anchor",href:"#configuration","aria-label":'Permalink to "Configuration"'},"​")],-1),u=e("p",null,"The configuration includes the following parameters:",-1),k=e("code",null,"mode",-1),y=e("code",null,"local",-1),g=e("code",null,"remote",-1),f=e("code",null,"remote",-1),m=e("code",null,"port",-1),_=e("code",null,"host",-1),E=e("code",null,"debug",-1),A=e("code",null,"logger",-1),x=e("code",null,"watch",-1),b=e("code",null,"Https",-1),D=e("code",null,"enabled",-1),T=e("code",null,"host",-1),v=e("code",null,"key",-1),F=e("code",null,"cert",-1),C=e("code",null,"ca",-1),w=e("code",null,"Permissions",-1),O=e("code",null,"Full",-1),P=e("code",null,"Sync",-1),q=e("code",null,"Ai",-1),B=e("code",null,"Translation",-1),S=o("",4);function H(I,G,N,V,R,U){const t=a("Badge");return p(),l("div",null,[c,r,d,u,e("ul",null,[e("li",null,[k,s(": The mode of the service. You can set it to "),y,s(" or "),g,s(". If you deploy this service on a remote server, it is recommended to set mode to "),f,s(". "),i(t,{type:"info",text:"Optional"})]),e("li",null,[m,s(": The port to listen on. "),i(t,{type:"info",text:"Optional"})]),e("li",null,[_,s(": The address to listen on. "),i(t,{type:"info",text:"Optional"})]),e("li",null,[E,s(": If there are some problems, you can set debug to true. "),i(t,{type:"info",text:"Optional"})]),e("li",null,[A,s(": If you want to use Fastify Logger, you can set logger to true. "),i(t,{type:"info",text:"Optional"})]),e("li",null,[x,s(": If you want the service to listen to the changes of the configuration file and update automatically, you can set watch to true. "),i(t,{type:"info",text:"Optional"})]),e("li",null,[b,s(": The configuration for HTTPS. "),i(t,{type:"info",text:"Optional"}),e("ul",null,[e("li",null,[D,s(": Enable HTTPS. "),i(t,{type:"info",text:"Optional"})]),e("li",null,[T,s(": The host to the certificate file (in auto generate mode). "),i(t,{type:"info",text:"Optional"})]),e("li",null,[v,s(": The path to the key file. "),i(t,{type:"info",text:"Optional"})]),e("li",null,[F,s(": The path to the certificate file. "),i(t,{type:"info",text:"Optional"})]),e("li",null,[C,s(": The path to the CA file. "),i(t,{type:"info",text:"Optional"})])])]),e("li",null,[w,s(": The configuration for permissions. "),i(t,{type:"info",text:"Optional"}),s(),i(t,{type:"warning",text:"^v0.7.0-beta.1"}),e("ul",null,[e("li",null,[O,s(": The full permissions. "),i(t,{type:"info",text:"Optional"})]),e("li",null,[P,s(": The sync permissions. "),i(t,{type:"info",text:"Optional"})]),e("li",null,[q,s(": The AI permissions. "),i(t,{type:"info",text:"Optional"})]),e("li",null,[B,s(": The translation permissions. "),i(t,{type:"info",text:"Optional"})])])])]),S])}const j=n(h,[["render",H]]);export{Y as __pageData,j as default};
